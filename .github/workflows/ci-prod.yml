# This workflow will build, sign, and package a WinUI 3 MSIX desktop application
# built on .NET.

name: Production Branch

on:
  push:
    branches: [ prod ]

jobs:

  build-x64:
    permissions:
      contents: write
    
    runs-on: windows-latest 
                             
    env:
      Solution_Name: AniMoe.sln
      Configuration: Release
      Arch: x64              

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Fetch semver from latest.txt
      id: version_fetch
      run: |
        $Version = Get-Content -Path ${{ github.workspace }}\latest.txt
        echo "APP_VERSION=$Version" >> $ENV:GITHUB_OUTPUT
    
    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2 
    
    # Add Community Toolkit Labs Repository for some Packages to get Installed
    - name: Add CommunityToolkit Labs Package Repository
      run: dotnet nuget add source https://pkgs.dev.azure.com/dotnet/CommunityToolkit/_packaging/CommunityToolkit-Labs/nuget/v3/index.json -n CommunityToolkitLabs

    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration

    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx from secret
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
        $certificatePath = "${{ github.workspace }}\src\AniMoe.App\AniMoe.App_TemporaryKey.pfx"
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    # Create the app package by building and packaging the project
    - name: Create the app package
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration /p:Platform=$env:Arch 
            /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle 
            /p:AppxPackageTestDir="$env:Appx_Package_Dir" /p:GenerateAppxPackageOnBuild=true
      env:
        Appx_Bundle: Never
        Appx_Package_Build_Mode: SideloadOnly
        Appx_Package_Dir: Packages\

    # Rename the MSIX bundle for convinience
    - name: Rename MSIX App
      run: |
        mv ${{ github.workspace }}\\src\AniMoe.App\Packages\**.msix ${{ github.workspace }}\\src\AniMoe.App\Packages\AniMoe.App.msix

    # Sign the MSIX using a self signed certificate
    - name: Sign MSIX App
      shell: cmd
      run: |
        "C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0//x86/signtool.exe" sign /fd sha256 /f ${{ github.workspace }}\src\AniMoe.App\AniMoe.App_TemporaryKey.pfx /p ${{ secrets.CERT_PASSWORD }} ${{ github.workspace }}\\src\AniMoe.App\Packages\AniMoe.App.msix

    # Remove the pfx
    - name: Remove the pfx
      run: Remove-Item -path ${{ github.workspace }}\\src\AniMoe.App\AniMoe.App_TemporaryKey.pfx 

    # Copies the release artifacts ["AniMoe.msix", "animoe-setup.exe", "AniMoe_Certificate.cer"] to Artifacts folder.
    - name: Copy Release artifacts
      working-directory: ${{ github.workspace }}
      run: |
        mkdir Artifacts
        mv src\AniMoe.App\Packages\Animoe.App.msix Artifacts\AniMoe.msix
        mv installer\animoe-setup.exe Artifacts\animoe_setup.exe
        mv AniMoe_Certificate.cer Artifacts\AniMoe_Certificate.cer

    # Change the path delimeter from \ to / for github release action to work
    - name: Change Path Delimeters
      shell: pwsh
      run: |
        $Path = $Path -replace '\\','/'

    # Creates a github release with the semver as tag
    - name: Create Github Release
      uses: softprops/action-gh-release@v1
      env:
        APP_VERSION: ${{ steps.version_fetch.outputs.APP_VERSION }}
      with:
        files: |
          Artifacts/AniMoe.msix
          Artifacts/AniMoe_Certificate.cer
          Artifacts/animoe_setup.exe
        body_path: ${{ github.workspace }}/changelog.md
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Version ${{ env.APP_VERSION }} âœ¨
        tag_name: ${{ env.APP_VERSION }}
        generate_release_notes: true
    
    # Sends a message to the #updates channel on AniMoe's Cafe discord server.
    - name: Send discord announcement
      uses: snorrwe/discord-action@v1.0.4
      with:
        discord_message: new
        discord_token: ${{ secrets.DISCORD_BOT_TOKEN }}
        post_file: changelog.md
        discord_channel: '1170356953785061517'
