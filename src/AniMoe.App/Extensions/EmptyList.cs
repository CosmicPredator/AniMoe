//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           7.0.0+g791fdc01f7
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile emptyList.json
//       
//       Input file:
//           emptyList.json (33795 bytes created 13:54+05:30 Jul 23 2023)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   398 |
// |--------------------------+-------|
// | Expression animators     |    36 |
// | KeyFrame animators       |    34 |
// | Reference parameters     |    36 |
// | Expression operations    |     2 |
// |--------------------------+-------|
// | Animated brushes         |     2 |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     3 |
// | PathKeyFrameAnimations   |     5 |
// |--------------------------+-------|
// | ContainerVisuals         |    10 |
// | ShapeVisuals             |    10 |
// |--------------------------+-------|
// | ContainerShapes          |     8 |
// | CompositionSpriteShapes  |    23 |
// |--------------------------+-------|
// | Brushes                  |    21 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     8 |
// ------------------------------------
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.Graphics;
using Windows.UI;

namespace AniMoe.App.AnimatedVisuals
{
    // Name:        NEW sin movs
    // Frame rate:  60 fps
    // Frame count: 316
    // Duration:    5266.7 mS
    public sealed class EmptyList
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
    {
        // Animation duration: 5.267 seconds.
        internal const long c_durationTicks = 52666666;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            return
                new EmptyList_AnimatedVisual(
                    compositor
                    );
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 316d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 316d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class EmptyList_AnimatedVisual : Microsoft.UI.Xaml.Controls.IAnimatedVisual
        {
            const long c_durationTicks = 52666666;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            BooleanKeyFrameAnimation _isVisibleBooleanAnimation_0;
            BooleanKeyFrameAnimation _isVisibleBooleanAnimation_1;
            CompositionColorBrush _colorBrush_AlmostDarkViolet_FF9817D5;
            CompositionColorBrush _colorBrush_AlmostGainsboro_FFCAD8E8;
            CompositionColorBrush _colorBrush_AlmostGainsboro_FFE6E6E6;
            CompositionColorBrush _colorBrush_Black;
            CompositionColorBrush _colorBrush_White;
            CompositionPath _path_0;
            CompositionPath _path_1;
            CompositionPath _path_2;
            CompositionPath _path_3;
            CompositionPath _path_4;
            CompositionPath _path_5;
            CompositionPathGeometry _pathGeometry_13;
            CompositionPathGeometry _pathGeometry_14;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            CubicBezierEasingFunction _cubicBezierEasingFunction_4;
            CubicBezierEasingFunction _cubicBezierEasingFunction_5;
            ExpressionAnimation _rootProgress;
            ScalarKeyFrameAnimation _rotationAngleInDegreesScalarAnimation_64_to_0;
            ScalarKeyFrameAnimation _strokeThicknessScalarAnimation_5p6_to_3p6;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _offsetVector2Animation;
            Vector2KeyFrameAnimation _scaleVector2Animation_2;

            static void StartProgressBoundAnimation(
                CompositionObject target,
                string animatedPropertyName,
                CompositionAnimation animation,
                ExpressionAnimation controllerProgressExpression)
            {
                target.StartAnimation(animatedPropertyName, animation);
                var controller = target.TryGetAnimationController(animatedPropertyName);
                controller.Pause();
                controller.StartAnimation("Progress", controllerProgressExpression);
            }

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            BooleanKeyFrameAnimation CreateBooleanKeyFrameAnimation(float initialProgress, bool initialValue)
            {
                var result = _c.CreateBooleanKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue);
                return result;
            }

            ColorKeyFrameAnimation CreateColorKeyFrameAnimation(float initialProgress, Color initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateColorKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InterpolationColorSpace = CompositionColorSpace.Rgb;
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            PathKeyFrameAnimation CreatePathKeyFrameAnimation(float initialProgress, CompositionPath initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreatePathKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_0()
            {
                // Frame 10.
                var result = _isVisibleBooleanAnimation_0 = CreateBooleanKeyFrameAnimation(0.03164557F, true);
                return result;
            }

            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_1()
            {
                // Frame 25.
                var result = _isVisibleBooleanAnimation_1 = CreateBooleanKeyFrameAnimation(0.079113923F, true);
                return result;
            }

            // - - - - - PreComp layer: Sombra lupa
            // Transforms for Sombra lupa Scale(1,1,0)
            BooleanKeyFrameAnimation IsVisibleBooleanAnimation_2()
            {
                // Frame 34.
                var result = CreateBooleanKeyFrameAnimation(0.107594937F, true);
                return result;
            }

            // - - - Layer aggregator
            // - -  Scale:2,2, Offset:<198.94199, 222.44>
            CanvasGeometry Geometry_00()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-7.0630002F, 94.322998F));
                    builder.AddCubicBezier(new Vector2(72.2740021F, 102.351997F), new Vector2(113.162003F, 82.8359985F), new Vector2(115.602997F, 35.7739983F));
                    builder.AddCubicBezier(new Vector2(119.263F, -34.8190002F), new Vector2(57.6020012F, -27.1930008F), new Vector2(39.6450005F, -45.7980003F));
                    builder.AddCubicBezier(new Vector2(21.6870003F, -64.4029999F), new Vector2(41.8040009F, -37.9630013F), new Vector2(7.21999979F, -76.5169983F));
                    builder.AddCubicBezier(new Vector2(-15.8369999F, -102.220001F), new Vector2(-46.5600014F, -102.351997F), new Vector2(-84.9489975F, -76.9120026F));
                    builder.AddCubicBezier(new Vector2(-115.914001F, -51.7099991F), new Vector2(-119.263F, -18.6590004F), new Vector2(-94.9970016F, 22.2399998F));
                    builder.AddCubicBezier(new Vector2(-70.7310028F, 63.1380005F), new Vector2(-41.4199982F, 87.1660004F), new Vector2(-7.0630002F, 94.322998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - Layer: x 2 Outlines
            // - - ShapeGroup: Group 1 Offset:<6.515, 6.515>
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.2579999F, 3.88499999F));
                    builder.AddLine(new Vector2(3.88499999F, 6.2579999F));
                    builder.AddLine(new Vector2(0.00100000005F, 2.37199998F));
                    builder.AddLine(new Vector2(-3.89100003F, 6.26399994F));
                    builder.AddLine(new Vector2(-6.26399994F, 3.89100003F));
                    builder.AddLine(new Vector2(-2.37400007F, -0.00100000005F));
                    builder.AddLine(new Vector2(-6.2579999F, -3.88499999F));
                    builder.AddLine(new Vector2(-3.88499999F, -6.26000023F));
                    builder.AddLine(new Vector2(-0.00100000005F, -2.37400007F));
                    builder.AddLine(new Vector2(3.89100003F, -6.26399994F));
                    builder.AddLine(new Vector2(6.26399994F, -3.89100003F));
                    builder.AddLine(new Vector2(2.37400007F, 0.00100000005F));
                    builder.AddLine(new Vector2(6.2579999F, 3.88499999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - - Layer: circulito Outlines
            // - - ShapeGroup: Group 1 Offset:<7.194, 7.198>
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 6.94799995F));
                    builder.AddCubicBezier(new Vector2(-3.83699989F, 6.94799995F), new Vector2(-6.94399977F, 3.83599997F), new Vector2(-6.94399977F, 0F));
                    builder.AddCubicBezier(new Vector2(-6.94399977F, -3.83599997F), new Vector2(-3.83699989F, -6.94799995F), new Vector2(0F, -6.94799995F));
                    builder.AddCubicBezier(new Vector2(3.83699989F, -6.94799995F), new Vector2(6.94399977F, -3.83599997F), new Vector2(6.94399977F, 0F));
                    builder.AddCubicBezier(new Vector2(6.94399977F, 3.83599997F), new Vector2(3.83699989F, 6.94799995F), new Vector2(0F, 6.94799995F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    builder.BeginFigure(new Vector2(0F, 2.98799992F));
                    builder.AddCubicBezier(new Vector2(1.64199996F, 2.98799992F), new Vector2(2.97600007F, 1.65199995F), new Vector2(2.97600007F, 0F));
                    builder.AddCubicBezier(new Vector2(2.97600007F, -1.65199995F), new Vector2(1.64199996F, -2.98799992F), new Vector2(0F, -2.98799992F));
                    builder.AddCubicBezier(new Vector2(-1.64300001F, -2.98799992F), new Vector2(-2.977F, -1.65199995F), new Vector2(-2.977F, 0F));
                    builder.AddCubicBezier(new Vector2(-2.977F, 1.65199995F), new Vector2(-1.64300001F, 2.98799992F), new Vector2(0F, 2.98799992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Papel top Outlines
            // - -  Offset:<261, 101.5>
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-58.5709991F, -15.5439997F));
                    builder.AddCubicBezier(new Vector2(-42.5709991F, -15.5439997F), new Vector2(-40.5709991F, -6.08699989F), new Vector2(-40.5709991F, 3.35299993F));
                    builder.AddLine(new Vector2(-40.5709991F, 13.6520004F));
                    builder.AddCubicBezier(new Vector2(-40.5709991F, 15.2840004F), new Vector2(-39.3300018F, 16.6100006F), new Vector2(-37.8030014F, 16.6100006F));
                    builder.AddLine(new Vector2(56.4720001F, 15.79F));
                    builder.AddCubicBezier(new Vector2(58F, 15.79F), new Vector2(59.2400017F, 14.4650002F), new Vector2(59.2400017F, 12.8330002F));
                    builder.AddLine(new Vector2(59.2400017F, 1.73000002F));
                    builder.AddCubicBezier(new Vector2(59.2400017F, -8.39799976F), new Vector2(51.5579987F, -16.6100006F), new Vector2(42.0830002F, -16.6100006F));
                    builder.AddCubicBezier(new Vector2(41.4410019F, -16.6100006F), new Vector2(-59.2410011F, -15.5439997F), new Vector2(-58.5709991F, -15.5439997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Papel top Outlines
            // - -  Offset:<261, 101.5>
            CanvasGeometry Geometry_04()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-58.9550018F, -12.4549999F));
                    builder.AddCubicBezier(new Vector2(-58.9550018F, -10.9110003F), new Vector2(-57.7000008F, -9.65799999F), new Vector2(-56.1549988F, -9.65799999F));
                    builder.AddCubicBezier(new Vector2(41.7220001F, -9.65799999F), new Vector2(41.7400017F, -9.6590004F), new Vector2(41.7579994F, -9.65799999F));
                    builder.AddCubicBezier(new Vector2(48.1720009F, -9.64700031F), new Vector2(53.3689995F, -4.40500021F), new Vector2(53.3790016F, 2.06599998F));
                    builder.AddLine(new Vector2(53.3790016F, 15.3339996F));
                    builder.AddLine(new Vector2(56.1469994F, 15.3339996F));
                    builder.AddCubicBezier(new Vector2(57.6739998F, 15.3339996F), new Vector2(58.9140015F, 14.0839996F), new Vector2(58.9140015F, 12.5430002F));
                    builder.AddLine(new Vector2(58.9140015F, 2.06599998F));
                    builder.AddCubicBezier(new Vector2(58.9550018F, -7.50299978F), new Vector2(51.2989998F, -15.2930002F), new Vector2(41.8139992F, -15.3339996F));
                    builder.AddLine(new Vector2(41.7029991F, -15.3339996F));
                    builder.AddLine(new Vector2(40.6699982F, -15.3339996F));
                    builder.AddCubicBezier(new Vector2(40.4160004F, -15.3190002F), new Vector2(40.1689987F, -15.2779999F), new Vector2(39.9179993F, -15.2510004F));
                    builder.AddLine(new Vector2(-56.1590004F, -15.2510004F));
                    builder.AddCubicBezier(new Vector2(-57.7029991F, -15.2510004F), new Vector2(-58.9550018F, -13.9989996F), new Vector2(-58.9550018F, -12.4549999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Masks
            // - - -  Offset:<261, 101.5>
            // - Path
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(133.251007F, 43.7550011F));
                    builder.AddCubicBezier(new Vector2(133.251007F, 43.7550011F), new Vector2(8.39400005F, 43.7550011F), new Vector2(8.39400005F, 43.7550011F));
                    builder.AddCubicBezier(new Vector2(8.39400005F, 43.7550011F), new Vector2(8.39400005F, 45.2070007F), new Vector2(8.39400005F, 45.2070007F));
                    builder.AddCubicBezier(new Vector2(8.39400005F, 45.2070007F), new Vector2(133.251007F, 45.2070007F), new Vector2(133.251007F, 45.2070007F));
                    builder.AddCubicBezier(new Vector2(133.251007F, 45.2070007F), new Vector2(133.251007F, 43.7550011F), new Vector2(133.251007F, 43.7550011F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Masks
            // - - -  Offset:<261, 101.5>
            // - Path
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(133.324005F, 9.50500011F));
                    builder.AddCubicBezier(new Vector2(133.324005F, 9.50500011F), new Vector2(8.4659996F, 9.50500011F), new Vector2(8.4659996F, 9.50500011F));
                    builder.AddCubicBezier(new Vector2(8.4659996F, 9.50500011F), new Vector2(8.39400005F, 45.2070007F), new Vector2(8.39400005F, 45.2070007F));
                    builder.AddCubicBezier(new Vector2(8.39400005F, 45.2070007F), new Vector2(133.251007F, 45.2070007F), new Vector2(133.251007F, 45.2070007F));
                    builder.AddCubicBezier(new Vector2(133.251007F, 45.2070007F), new Vector2(133.324005F, 9.50500011F), new Vector2(133.324005F, 9.50500011F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Papel front Outlines
            // - -  Offset:<261, 101.5>
            CanvasGeometry Geometry_07()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(61.6389999F, -76.5899963F));
                    builder.AddLine(new Vector2(61.6389999F, -81.8399963F));
                    builder.AddLine(new Vector2(-38.0480003F, -81.8399963F));
                    builder.AddCubicBezier(new Vector2(-51.1100006F, -81.8199997F), new Vector2(-61.6940002F, -71.1470032F), new Vector2(-61.7140007F, -57.9770012F));
                    builder.AddLine(new Vector2(-61.7140007F, 79.0500031F));
                    builder.AddCubicBezier(new Vector2(-61.7140007F, 80.5899963F), new Vector2(-60.473999F, 81.8399963F), new Vector2(-58.9469986F, 81.8399963F));
                    builder.AddLine(new Vector2(26.4060001F, 81.8399963F));
                    builder.AddCubicBezier(new Vector2(39.4510002F, 81.7990036F), new Vector2(50.0089989F, 71.1299973F), new Vector2(50.0180016F, 57.9770012F));
                    builder.AddLine(new Vector2(50.0180016F, -64.5419998F));
                    builder.AddLine(new Vector2(50.0180016F, -64.6729965F));
                    builder.AddCubicBezier(new Vector2(50.098999F, -71.0899963F), new Vector2(55.276001F, -76.5719986F), new Vector2(61.6389999F, -76.5810013F));
                    builder.AddCubicBezier(new Vector2(61.6650009F, -76.5810013F), new Vector2(61.6889992F, -76.5889969F), new Vector2(61.7140007F, -76.5899963F));
                    builder.AddLine(new Vector2(61.6389999F, -76.5899963F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Papel front Outlines
            // - -  Offset:<261, 101.5>
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-6.1329999F, -52.0060005F));
                    builder.AddCubicBezier(new Vector2(-19.1959991F, -51.9850006F), new Vector2(-29.7810001F, -41.3120003F), new Vector2(-29.8010006F, -28.1420002F));
                    builder.AddLine(new Vector2(-29.8010006F, 52.0800018F));
                    builder.AddLine(new Vector2(29.8010006F, -52.0800018F));
                    builder.AddLine(new Vector2(-6.1329999F, -52.0060005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Papel front Outlines
            // - -  Offset:<261, 101.5>
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(-58.1349983F, -24.6070004F));
                    builder.AddLine(new Vector2(-58.1349983F, -55.1949997F));
                    builder.AddCubicBezier(new Vector2(-58.1139984F, -68.3659973F), new Vector2(-47.5299988F, -79.038002F), new Vector2(-34.4669991F, -79.0589981F));
                    builder.AddLine(new Vector2(65.2190018F, -79.0589981F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    builder.BeginFigure(new Vector2(-65.2190018F, 79.0589981F));
                    builder.AddCubicBezier(new Vector2(-59.2659988F, 79.0589981F), new Vector2(-58.1889992F, 72.7340012F), new Vector2(-58.1889992F, 68.7369995F));
                    builder.AddCubicBezier(new Vector2(-58.1889992F, 36.0499992F), new Vector2(-58.1349983F, 12.9440002F), new Vector2(-58.1349983F, 4.65500021F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    builder.BeginFigure(new Vector2(-57.6139984F, -15.2620001F));
                    builder.AddLine(new Vector2(-57.6139984F, -11.5869999F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: Papel front Outlines
            // - -  Offset:<261, 101.5>
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(68.3639984F, -81.9000015F));
                    builder.AddLine(new Vector2(67.3310013F, -81.9000015F));
                    builder.AddCubicBezier(new Vector2(58.2830009F, -81.348999F), new Vector2(51.2200012F, -73.7939987F), new Vector2(51.2080002F, -64.6490021F));
                    builder.AddLine(new Vector2(51.2080002F, -64.3880005F));
                    builder.AddLine(new Vector2(51.2080002F, 57.9309998F));
                    builder.AddCubicBezier(new Vector2(51.1910019F, 66.2659988F), new Vector2(45.6080017F, 73.5419998F), new Vector2(37.6139984F, 75.6480026F));
                    builder.AddCubicBezier(new Vector2(36.7400017F, 75.875F), new Vector2(35.8450012F, 75.9869995F), new Vector2(34.9510002F, 75.9960022F));
                    builder.AddLine(new Vector2(34.9510002F, 75.9990005F));
                    builder.AddLine(new Vector2(34.882F, 75.9990005F));
                    builder.AddLine(new Vector2(34.8110008F, 75.9990005F));
                    builder.AddLine(new Vector2(-68.6669998F, 75.9990005F));
                    builder.AddCubicBezier(new Vector2(-64.5130005F, 79.6660004F), new Vector2(-59.0789986F, 81.8949966F), new Vector2(-53.1259995F, 81.9000015F));
                    builder.AddLine(new Vector2(-53.0890007F, 81.9000015F));
                    builder.AddLine(new Vector2(-23.2539997F, 81.9000015F));
                    builder.AddLine(new Vector2(33.132F, 81.9000015F));
                    builder.AddCubicBezier(new Vector2(33.7400017F, 81.9000015F), new Vector2(34.6800003F, 81.9000015F), new Vector2(35.2900009F, 81.8069992F));
                    builder.AddCubicBezier(new Vector2(36.3650017F, 81.7080002F), new Vector2(37.4309998F, 81.5279999F), new Vector2(38.4799995F, 81.2679977F));
                    builder.AddCubicBezier(new Vector2(49.1959991F, 78.7509995F), new Vector2(56.7849998F, 69.1230011F), new Vector2(56.7989998F, 58.0239983F));
                    builder.AddLine(new Vector2(56.7989998F, -64.5559998F));
                    builder.AddLine(new Vector2(56.7989998F, -64.685997F));
                    builder.AddCubicBezier(new Vector2(56.8779984F, -70.7009964F), new Vector2(61.4480019F, -75.6800003F), new Vector2(67.3850021F, -76.223999F));
                    builder.AddCubicBezier(new Vector2(67.7129974F, -76.2419968F), new Vector2(68.3410034F, -76.2399979F), new Vector2(68.6669998F, -76.223999F));
                    builder.AddLine(new Vector2(68.3639984F, -81.9000015F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(152.276001F, 7.78100014F));
                    builder.AddCubicBezier(new Vector2(152.276001F, 7.78100014F), new Vector2(-1.32599998F, 7.78100014F), new Vector2(-1.32599998F, 7.78100014F));
                    builder.AddCubicBezier(new Vector2(-1.32599998F, 7.78100014F), new Vector2(-1.32599998F, 9.03100014F), new Vector2(-1.32599998F, 9.03100014F));
                    builder.AddCubicBezier(new Vector2(-1.32599998F, 9.03100014F), new Vector2(152.276001F, 9.03100014F), new Vector2(152.276001F, 9.03100014F));
                    builder.AddCubicBezier(new Vector2(152.276001F, 9.03100014F), new Vector2(152.276001F, 7.78100014F), new Vector2(152.276001F, 7.78100014F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Masks
            // - - - Layer: Papel front Outlines
            // - Path
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(152.276001F, 7.78100014F));
                    builder.AddCubicBezier(new Vector2(152.276001F, 7.78100014F), new Vector2(-1.32599998F, 7.78100014F), new Vector2(-1.32599998F, 7.78100014F));
                    builder.AddCubicBezier(new Vector2(-1.32599998F, 7.78100014F), new Vector2(-1.32599998F, 175.031006F), new Vector2(-1.32599998F, 175.031006F));
                    builder.AddCubicBezier(new Vector2(-1.32599998F, 175.031006F), new Vector2(152.276001F, 175.031006F), new Vector2(152.276001F, 175.031006F));
                    builder.AddCubicBezier(new Vector2(152.276001F, 175.031006F), new Vector2(152.276001F, 7.78100014F), new Vector2(152.276001F, 7.78100014F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Shape tree root for layer: papel bot Outlines
            // - -  Offset:<261, 101.5>
            CanvasGeometry Geometry_13()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(89.3420029F, -145.931F));
                    builder.AddLine(new Vector2(88.3089981F, -145.931F));
                    builder.AddCubicBezier(new Vector2(79.2610016F, -145.378998F), new Vector2(72.2009964F, -137.824997F), new Vector2(72.1880035F, -128.679993F));
                    builder.AddLine(new Vector2(72.1880035F, -128.419006F));
                    builder.AddLine(new Vector2(72.1880035F, -6.0999999F));
                    builder.AddCubicBezier(new Vector2(72.1709976F, 2.2349999F), new Vector2(66.5879974F, 9.51200008F), new Vector2(58.5940018F, 11.6169996F));
                    builder.AddCubicBezier(new Vector2(56.7789993F, 12.0900002F), new Vector2(54.8730011F, 12.0900002F), new Vector2(53.0589981F, 11.6169996F));
                    builder.AddCubicBezier(new Vector2(45.0400009F, 9.48200035F), new Vector2(39.4589996F, 2.15499997F), new Vector2(39.480999F, -6.21099997F));
                    builder.AddLine(new Vector2(39.480999F, -9.93299961F));
                    builder.AddCubicBezier(new Vector2(39.4920006F, -11.474F), new Vector2(38.262001F, -12.7340002F), new Vector2(36.7340012F, -12.743F));
                    builder.AddLine(new Vector2(19.1949997F, -12.743F));
                    builder.AddLine(new Vector2(5.09399986F, -12.743F));
                    builder.AddLine(new Vector2(-16.6450005F, -12.743F));
                    builder.AddLine(new Vector2(-39.4059982F, -12.743F));
                    builder.AddLine(new Vector2(-53.0099983F, -12.743F));
                    builder.AddCubicBezier(new Vector2(-54.5369987F, -12.743F), new Vector2(-55.7770004F, -11.4919996F), new Vector2(-55.7770004F, -9.95100021F));
                    builder.AddLine(new Vector2(-55.7770004F, -6.00600004F));
                    builder.AddCubicBezier(new Vector2(-55.7890015F, 7.16900015F), new Vector2(-45.2070007F, 17.8579998F), new Vector2(-32.1459999F, 17.8689995F));
                    builder.AddLine(new Vector2(-32.1110001F, 17.8689995F));
                    builder.AddLine(new Vector2(-2.27600002F, 17.8689995F));
                    builder.AddLine(new Vector2(54.1090012F, 17.8689995F));
                    builder.AddCubicBezier(new Vector2(54.7179985F, 17.8689995F), new Vector2(55.6590004F, 17.8689995F), new Vector2(56.2680016F, 17.7759991F));
                    builder.AddCubicBezier(new Vector2(57.3440018F, 17.677F), new Vector2(58.4109993F, 17.4979992F), new Vector2(59.4599991F, 17.2369995F));
                    builder.AddCubicBezier(new Vector2(70.1760025F, 14.7209997F), new Vector2(77.7639999F, 5.09299994F), new Vector2(77.7770004F, -6.00600004F));
                    builder.AddLine(new Vector2(77.7770004F, -128.585999F));
                    builder.AddLine(new Vector2(77.7770004F, -128.716995F));
                    builder.AddCubicBezier(new Vector2(77.8560028F, -134.731003F), new Vector2(82.427002F, -139.712006F), new Vector2(88.3649979F, -140.253998F));
                    builder.AddCubicBezier(new Vector2(88.7089996F, -140.272995F), new Vector2(89.0530014F, -140.272995F), new Vector2(89.3980026F, -140.253998F));
                    builder.AddCubicBezier(new Vector2(95.8119965F, -140.244003F), new Vector2(101.009003F, -135.001007F), new Vector2(101.019997F, -128.531006F));
                    builder.AddLine(new Vector2(101.019997F, -115.262001F));
                    builder.AddLine(new Vector2(103.787003F, -115.262001F));
                    builder.AddCubicBezier(new Vector2(105.315002F, -115.262001F), new Vector2(106.555F, -116.512001F), new Vector2(106.555F, -118.053001F));
                    builder.AddLine(new Vector2(106.555F, -128.531006F));
                    builder.AddCubicBezier(new Vector2(106.595001F, -138.100006F), new Vector2(98.939003F, -145.889008F), new Vector2(89.4540024F, -145.931F));
                    builder.AddLine(new Vector2(89.3420029F, -145.931F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_14()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(114.817001F, 36.6469994F));
                    builder.AddCubicBezier(new Vector2(114.817001F, 36.6469994F), new Vector2(1.38100004F, 36.6469994F), new Vector2(1.38100004F, 36.6469994F));
                    builder.AddCubicBezier(new Vector2(1.38100004F, 36.6469994F), new Vector2(1.32000005F, 36.4780006F), new Vector2(1.32000005F, 36.4780006F));
                    builder.AddCubicBezier(new Vector2(1.32000005F, 36.4780006F), new Vector2(114.755997F, 36.4780006F), new Vector2(114.755997F, 36.4780006F));
                    builder.AddCubicBezier(new Vector2(114.755997F, 36.4780006F), new Vector2(114.817001F, 36.6469994F), new Vector2(114.817001F, 36.6469994F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Masks
            // - - - Layer: papel bot Outlines
            // - Path
            CanvasGeometry Geometry_15()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(114.755997F, 5.02199984F));
                    builder.AddCubicBezier(new Vector2(114.755997F, 5.02199984F), new Vector2(1.32000005F, 5.02199984F), new Vector2(1.32000005F, 5.02199984F));
                    builder.AddCubicBezier(new Vector2(1.32000005F, 5.02199984F), new Vector2(1.32000005F, 36.4780006F), new Vector2(1.32000005F, 36.4780006F));
                    builder.AddCubicBezier(new Vector2(1.32000005F, 36.4780006F), new Vector2(114.755997F, 36.4780006F), new Vector2(114.755997F, 36.4780006F));
                    builder.AddCubicBezier(new Vector2(114.755997F, 36.4780006F), new Vector2(114.755997F, 5.02199984F), new Vector2(114.755997F, 5.02199984F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_16()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-15.3009996F, -15.2770004F));
                    builder.AddCubicBezier(new Vector2(-13.4160004F, -17.1560001F), new Vector2(-10.3660002F, -17.1529999F), new Vector2(-8.4829998F, -15.2729998F));
                    builder.AddLine(new Vector2(15.3050003F, 8.47599983F));
                    builder.AddCubicBezier(new Vector2(17.1819992F, 10.3500004F), new Vector2(17.184F, 13.3909998F), new Vector2(15.3100004F, 15.2690001F));
                    builder.AddLine(new Vector2(15.302F, 15.2770004F));
                    builder.AddCubicBezier(new Vector2(13.4169998F, 17.1550007F), new Vector2(10.3669996F, 17.1539993F), new Vector2(8.4829998F, 15.2729998F));
                    builder.AddLine(new Vector2(-15.3050003F, -8.47500038F));
                    builder.AddCubicBezier(new Vector2(-17.1819992F, -10.3500004F), new Vector2(-17.184F, -13.3909998F), new Vector2(-15.3100004F, -15.2679996F));
                    builder.AddLine(new Vector2(-15.3009996F, -15.2770004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_17()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00100000005F, 36F));
                    builder.AddCubicBezier(new Vector2(3.10700011F, 35.8950005F), new Vector2(1.94500005F, 21.4290009F), new Vector2(2.204F, 2.37100005F));
                    builder.AddCubicBezier(new Vector2(2.4749999F, -17.5100002F), new Vector2(1.37800002F, -35.8839989F), new Vector2(0.00100000005F, -36F));
                    builder.AddCubicBezier(new Vector2(-1.27499998F, -36.1069984F), new Vector2(-3.43000007F, -17.9120007F), new Vector2(-3.43000007F, 1.97099996F));
                    builder.AddCubicBezier(new Vector2(-3.43000007F, 21.8530006F), new Vector2(-2.45900011F, 36.0830002F), new Vector2(0.00100000005F, 36F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_18()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00100000005F, 36F));
                    builder.AddCubicBezier(new Vector2(19.9239998F, 36F), new Vector2(36.0740013F, 19.882F), new Vector2(36.0740013F, 0F));
                    builder.AddCubicBezier(new Vector2(36.0740013F, -19.8829994F), new Vector2(19.9239998F, -36F), new Vector2(0.00100000005F, -36F));
                    builder.AddCubicBezier(new Vector2(-19.9220009F, -36F), new Vector2(-36.0740013F, -19.8829994F), new Vector2(-36.0740013F, 0F));
                    builder.AddCubicBezier(new Vector2(-36.0740013F, 19.882F), new Vector2(-19.9220009F, 36F), new Vector2(0.00100000005F, 36F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - PreComp layer: Sombra lupa
            // - - - Masks
            CanvasGeometry Geometry_19()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(412.5F, 169.5F));
                    builder.AddLine(new Vector2(231.5F, 169.5F));
                    builder.AddLine(new Vector2(202F, 190.5F));
                    builder.AddLine(new Vector2(191F, 254F));
                    builder.AddLine(new Vector2(191F, 428.5F));
                    builder.AddLine(new Vector2(329F, 428.5F));
                    builder.AddCubicBezier(new Vector2(333F, 428.5F), new Vector2(333.5F, 432F), new Vector2(333.5F, 434.5F));
                    builder.AddCubicBezier(new Vector2(333.5F, 437F), new Vector2(336F, 478.5F), new Vector2(365.5F, 478.5F));
                    builder.AddCubicBezier(new Vector2(395F, 478.5F), new Vector2(399F, 451.5F), new Vector2(399F, 436.5F));
                    builder.AddLine(new Vector2(399F, 193F));
                    builder.AddCubicBezier(new Vector2(399F, 188F), new Vector2(405F, 173F), new Vector2(412.5F, 169.5F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_20()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(1.79999995F, 1.79999995F));
                    builder.AddLine(new Vector2(28.8549995F, 1.79999995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: line 2 Outlines
            CanvasGeometry Geometry_21()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(1.79999995F, 1.79999995F));
                    builder.AddLine(new Vector2(63.125F, 1.79999995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: line 1 Outlines
            CanvasGeometry Geometry_22()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(1.79999995F, 1.79999995F));
                    builder.AddLine(new Vector2(70.2109985F, 1.79999995F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_23()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(3.43799996F, -0.00400000019F));
                    builder.AddCubicBezier(new Vector2(3.43799996F, -0.00400000019F), new Vector2(0.0270000007F, 3.4059999F), new Vector2(0.0270000007F, 3.4059999F));
                    builder.AddCubicBezier(new Vector2(0.0270000007F, 3.4059999F), new Vector2(0.00999999978F, 3.421F), new Vector2(0.00999999978F, 3.421F));
                    builder.AddCubicBezier(new Vector2(0.00999999978F, 3.421F), new Vector2(0.0560000017F, 3.46099997F), new Vector2(0.0560000017F, 3.46099997F));
                    builder.AddCubicBezier(new Vector2(0.0560000017F, 3.46099997F), new Vector2(-3.375F, 0.0309999995F), new Vector2(-3.375F, 0.0309999995F));
                    builder.AddCubicBezier(new Vector2(-3.375F, 0.0309999995F), new Vector2(-3.421F, -0.00999999978F), new Vector2(-3.421F, -0.00999999978F));
                    builder.AddCubicBezier(new Vector2(-3.421F, -0.00999999978F), new Vector2(-3.39700007F, -0.0209999997F), new Vector2(-3.39700007F, -0.0209999997F));
                    builder.AddCubicBezier(new Vector2(-3.39700007F, -0.0209999997F), new Vector2(0.0140000004F, -3.43199992F), new Vector2(0.0140000004F, -3.43199992F));
                    builder.AddCubicBezier(new Vector2(0.0140000004F, -3.43199992F), new Vector2(-0.00999999978F, -3.421F), new Vector2(-0.00999999978F, -3.421F));
                    builder.AddCubicBezier(new Vector2(-0.00999999978F, -3.421F), new Vector2(0.0240000002F, -3.44400001F), new Vector2(0.0240000002F, -3.44400001F));
                    builder.AddCubicBezier(new Vector2(0.0240000002F, -3.44400001F), new Vector2(3.454F, -0.0130000003F), new Vector2(3.454F, -0.0130000003F));
                    builder.AddCubicBezier(new Vector2(3.454F, -0.0130000003F), new Vector2(3.421F, 0.0109999999F), new Vector2(3.421F, 0.0109999999F));
                    builder.AddCubicBezier(new Vector2(3.421F, 0.0109999999F), new Vector2(3.43799996F, -0.00400000019F), new Vector2(3.43799996F, -0.00400000019F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - Layer aggregator
            // - - - - - Layer: LUPA rotacion 3D
            // - - - Transforms: LUPA rotacion 3D Scale:0.5,0.5, Offset:<-22.366, -20.280998>
            // - Path
            CanvasGeometry Geometry_24()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(12.2040005F, 8.79399967F));
                    builder.AddCubicBezier(new Vector2(12.2040005F, 8.79399967F), new Vector2(8.79199982F, 12.2040005F), new Vector2(8.79199982F, 12.2040005F));
                    builder.AddCubicBezier(new Vector2(8.79199982F, 12.2040005F), new Vector2(0.00999999978F, 3.42199993F), new Vector2(0.00999999978F, 3.42199993F));
                    builder.AddCubicBezier(new Vector2(0.00999999978F, 3.42199993F), new Vector2(-8.70600033F, 12.1370001F), new Vector2(-8.70600033F, 12.1370001F));
                    builder.AddCubicBezier(new Vector2(-8.70600033F, 12.1370001F), new Vector2(-12.1370001F, 8.70699978F), new Vector2(-12.1370001F, 8.70699978F));
                    builder.AddCubicBezier(new Vector2(-12.1370001F, 8.70699978F), new Vector2(-3.421F, -0.00999999978F), new Vector2(-3.421F, -0.00999999978F));
                    builder.AddCubicBezier(new Vector2(-3.421F, -0.00999999978F), new Vector2(-12.2040005F, -8.79300022F), new Vector2(-12.2040005F, -8.79300022F));
                    builder.AddCubicBezier(new Vector2(-12.2040005F, -8.79300022F), new Vector2(-8.79199982F, -12.2040005F), new Vector2(-8.79199982F, -12.2040005F));
                    builder.AddCubicBezier(new Vector2(-8.79199982F, -12.2040005F), new Vector2(-0.00999999978F, -3.421F), new Vector2(-0.00999999978F, -3.421F));
                    builder.AddCubicBezier(new Vector2(-0.00999999978F, -3.421F), new Vector2(8.70600033F, -12.1370001F), new Vector2(8.70600033F, -12.1370001F));
                    builder.AddCubicBezier(new Vector2(8.70600033F, -12.1370001F), new Vector2(12.1370001F, -8.70600033F), new Vector2(12.1370001F, -8.70600033F));
                    builder.AddCubicBezier(new Vector2(12.1370001F, -8.70600033F), new Vector2(3.421F, 0.0109999999F), new Vector2(3.421F, 0.0109999999F));
                    builder.AddCubicBezier(new Vector2(3.421F, 0.0109999999F), new Vector2(12.2040005F, 8.79399967F), new Vector2(12.2040005F, 8.79399967F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - - Layer: LUPA rotacion 3D
            // - Transforms: LUPA rotacion 3D Scale:0.5,0.5, Offset:<-22.366, -20.280998>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostDarkViolet_009817D5_to_AlmostDarkViolet_FF9817D5()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0x98, 0x17, 0xD5), _stepThenHoldEasingFunction);
                // Frame 202.
                // TransparentAlmostDarkViolet_009817D5
                result.InsertKeyFrame(0.639240503F, Color.FromArgb(0x00, 0x98, 0x17, 0xD5), _holdThenStepEasingFunction);
                // Frame 205.
                // AlmostDarkViolet_FF9817D5
                result.InsertKeyFrame(0.648734152F, Color.FromArgb(0xFF, 0x98, 0x17, 0xD5), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            // - - Layer aggregator
            // -  Scale:2,2, Offset:<198.94199, 222.44>
            // Color
            ColorKeyFrameAnimation ColorAnimation_TransparentAlmostLavender_00F2D9FF_to_AlmostLavender_FFF2D9FF()
            {
                // Frame 0.
                var result = CreateColorKeyFrameAnimation(0F, Color.FromArgb(0x00, 0xF2, 0xD9, 0xFF), StepThenHoldEasingFunction());
                // Frame 7.
                // TransparentAlmostLavender_00F2D9FF
                result.InsertKeyFrame(0.0221518986F, Color.FromArgb(0x00, 0xF2, 0xD9, 0xFF), HoldThenStepEasingFunction());
                // Frame 49.
                // AlmostLavender_FFF2D9FF
                result.InsertKeyFrame(0.155063286F, Color.FromArgb(0xFF, 0xF2, 0xD9, 0xFF), _c.CreateCubicBezierEasingFunction(new Vector2(0.439999998F, 0F), new Vector2(0.5F, 1F)));
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: LUPA rotacion 3D
            // Transforms: LUPA rotacion 3D Scale:0.5,0.5, Offset:<-22.366, -20.280998>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostDarkViolet_009817D5_to_AlmostDarkViolet_FF9817D5()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostDarkViolet_009817D5_to_AlmostDarkViolet_FF9817D5(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Scale:2,2, Offset:<198.94199, 222.44>
            CompositionColorBrush AnimatedColorBrush_TransparentAlmostLavender_00F2D9FF_to_AlmostLavender_FFF2D9FF()
            {
                var result = _c.CreateColorBrush();
                StartProgressBoundAnimation(result, "Color", ColorAnimation_TransparentAlmostLavender_00F2D9FF_to_AlmostLavender_FFF2D9FF(), RootProgress());
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: LUPA rotacion 3D
            // Transforms: LUPA rotacion 3D Scale:0.5,0.5, Offset:<-22.366, -20.280998>
            CompositionColorBrush ColorBrush_AlmostDarkMagenta_FF7813AA()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x78, 0x13, 0xAA));
            }

            CompositionColorBrush ColorBrush_AlmostDarkViolet_FF9817D5()
            {
                return _colorBrush_AlmostDarkViolet_FF9817D5 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x98, 0x17, 0xD5));
            }

            CompositionColorBrush ColorBrush_AlmostGainsboro_FFCAD8E8()
            {
                return _colorBrush_AlmostGainsboro_FFCAD8E8 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xCA, 0xD8, 0xE8));
            }

            CompositionColorBrush ColorBrush_AlmostGainsboro_FFE6E6E6()
            {
                return _colorBrush_AlmostGainsboro_FFE6E6E6 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xE6, 0xE6, 0xE6));
            }

            // - Shape tree root for layer: Papel front Outlines
            // Offset:<261, 101.5>
            CompositionColorBrush ColorBrush_AlmostWhiteSmoke_FFF0F0F0()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF0, 0xF0, 0xF0));
            }

            CompositionColorBrush ColorBrush_Black()
            {
                return _colorBrush_Black = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            CompositionColorBrush ColorBrush_White()
            {
                return _colorBrush_White = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF));
            }

            // Layer aggregator
            // Layer: x 2 Outlines
            CompositionContainerShape ContainerShape_0()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                result.Shapes.Add(ContainerShape_1());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_0(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: x 2 Outlines
            CompositionContainerShape ContainerShape_1()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(6.51499987F, 6.51499987F);
                result.Offset = new Vector2(90.0979996F, 409.58197F);
                // ShapeGroup: Group 1 Offset:<6.515, 6.515>
                result.Shapes.Add(SpriteShape_01());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_0(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Layer: circulito Outlines
            CompositionContainerShape ContainerShape_2()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                result.Shapes.Add(ContainerShape_3());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: circulito Outlines
            CompositionContainerShape ContainerShape_3()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(7.19399977F, 7.19799995F);
                result.Offset = new Vector2(509.636017F, 224.888F);
                // ShapeGroup: Group 1 Offset:<7.194, 7.198>
                result.Shapes.Add(SpriteShape_02());
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_1(), _rootProgress);
                return result;
            }

            // - - - - - - PreComp layer: Sombra lupa
            // - Transforms for Sombra lupa Scale(1,1,0)
            // Shape tree root for layer: LUPA sombra
            CompositionContainerShape ContainerShape_4()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(47.2060013F, 48.0540009F);
                // Transforms: LUPA sombra
                result.Shapes.Add(ContainerShape_5());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_64_to_0(), _rootProgress);
                StartProgressBoundAnimation(result, "Scale", ScaleVector2Animation_2(), _rootProgress);
                StartProgressBoundAnimation(result, "Offset", OffsetVector2Animation(), _rootProgress);
                return result;
            }

            // Transforms for LUPA sombra
            CompositionContainerShape ContainerShape_5()
            {
                var result = _c.CreateContainerShape();
                var propertySet = result.Properties;
                propertySet.InsertVector2("Anchor", new Vector2(59.5279999F, 35.6559982F));
                result.Scale = new Vector2(0.5F, 0.5F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 3 Offset:<79.622, 81.906>
                shapes.Add(SpriteShape_13());
                // ShapeGroup: Group 2 RotationDegrees:-42.5, Offset:<45.074, 45>
                shapes.Add(SpriteShape_14());
                BindProperty(result, "CenterPoint", "my.Anchor", "my", result);
                BindProperty(result, "Offset", "Vector2(26.162-my.Anchor.X,29.375-my.Anchor.Y)", "my", result);
                StartProgressBoundAnimation(propertySet, "Anchor", AnchorVector2Animation(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Layer: LUPA rotacion 3D
            CompositionContainerShape ContainerShape_6()
            {
                var result = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                result.Shapes.Add(ContainerShape_7());
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_6(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: LUPA rotacion 3D
            CompositionContainerShape ContainerShape_7()
            {
                var result = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(47.2060013F, 48.0540009F);
                var shapes = result.Shapes;
                // Transforms: LUPA rotacion 3D Scale:0.5,0.5, Offset:<-22.366, -20.280998>
                shapes.Add(SpriteShape_20());
                // Transforms: LUPA rotacion 3D Scale:0.5,0.5, Offset:<-22.366, -20.280998>
                shapes.Add(SpriteShape_21());
                // Transforms: LUPA rotacion 3D Scale:0.5,0.5, Offset:<-22.366, -20.280998>
                shapes.Add(SpriteShape_22());
                StartProgressBoundAnimation(result, "RotationAngleInDegrees", _rotationAngleInDegreesScalarAnimation_64_to_0, _rootProgress);
                StartProgressBoundAnimation(result, "Scale", _scaleVector2Animation_2, _rootProgress);
                StartProgressBoundAnimation(result, "Offset", _offsetVector2Animation, _rootProgress);
                return result;
            }

            CompositionEffectBrush EffectBrush_0()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            CompositionEffectBrush EffectBrush_1()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_2());
                result.SetSourceParameter("source", SurfaceBrush_3());
                return result;
            }

            CompositionEffectBrush EffectBrush_2()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_4());
                result.SetSourceParameter("source", SurfaceBrush_5());
                return result;
            }

            // PreComp layer: Sombra lupa
            CompositionEffectBrush EffectBrush_3()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var effectFactory = _c.CreateEffectFactory(compositeEffect);
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_6());
                result.SetSourceParameter("source", SurfaceBrush_7());
                return result;
            }

            CompositionPath Path_0()
            {
                var result = _path_0 = new CompositionPath(Geometry_11());
                return result;
            }

            CompositionPath Path_1()
            {
                var result = _path_1 = new CompositionPath(Geometry_14());
                return result;
            }

            CompositionPath Path_2()
            {
                var result = _path_2 = new CompositionPath(Geometry_17());
                return result;
            }

            CompositionPath Path_3()
            {
                var result = _path_3 = new CompositionPath(Geometry_18());
                return result;
            }

            CompositionPath Path_4()
            {
                var result = _path_4 = new CompositionPath(Geometry_20());
                return result;
            }

            CompositionPath Path_5()
            {
                var result = _path_5 = new CompositionPath(Geometry_23());
                return result;
            }

            // - Layer aggregator
            // Scale:2,2, Offset:<198.94199, 222.44>
            CompositionPathGeometry PathGeometry_00()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - - - Layer aggregator
            // - - Layer: x 2 Outlines
            // ShapeGroup: Group 1 Offset:<6.515, 6.515>
            CompositionPathGeometry PathGeometry_01()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_01()));
            }

            // - - - Layer aggregator
            // - - Layer: circulito Outlines
            // ShapeGroup: Group 1 Offset:<7.194, 7.198>
            CompositionPathGeometry PathGeometry_02()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_02()));
            }

            // - Shape tree root for layer: Papel top Outlines
            // Offset:<261, 101.5>
            CompositionPathGeometry PathGeometry_03()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_03()));
            }

            // - Shape tree root for layer: Papel top Outlines
            // Offset:<261, 101.5>
            CompositionPathGeometry PathGeometry_04()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
            }

            // - Masks
            // Offset:<261, 101.5>
            CompositionPathGeometry PathGeometry_05()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_0(), _rootProgress);
                return result;
            }

            // - Shape tree root for layer: Papel front Outlines
            // Offset:<261, 101.5>
            CompositionPathGeometry PathGeometry_06()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_07()));
            }

            // - Shape tree root for layer: Papel front Outlines
            // Offset:<261, 101.5>
            CompositionPathGeometry PathGeometry_07()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_08()));
            }

            // - Shape tree root for layer: Papel front Outlines
            // Offset:<261, 101.5>
            CompositionPathGeometry PathGeometry_08()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_09()));
            }

            // - Shape tree root for layer: Papel front Outlines
            // Offset:<261, 101.5>
            CompositionPathGeometry PathGeometry_09()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_10()));
            }

            // - Masks
            // Layer: Papel front Outlines
            CompositionPathGeometry PathGeometry_10()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_1(), _rootProgress);
                return result;
            }

            // - Shape tree root for layer: papel bot Outlines
            // Offset:<261, 101.5>
            CompositionPathGeometry PathGeometry_11()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_13()));
            }

            // - Masks
            // Layer: papel bot Outlines
            CompositionPathGeometry PathGeometry_12()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_2(), _rootProgress);
                return result;
            }

            CompositionPathGeometry PathGeometry_13()
            {
                return _pathGeometry_13 = _c.CreatePathGeometry(new CompositionPath(Geometry_16()));
            }

            CompositionPathGeometry PathGeometry_14()
            {
                var result = _pathGeometry_14 = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_3(), _rootProgress);
                return result;
            }

            // - - - - - - PreComp layer: Sombra lupa
            // - Masks
            CompositionPathGeometry PathGeometry_15()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_19()));
            }

            // - Layer aggregator
            // Layer: line 4 Outlines
            CompositionPathGeometry PathGeometry_16()
            {
                var result = _c.CreatePathGeometry(Path_4());
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_0_to_1_0(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: line 3 Outlines
            CompositionPathGeometry PathGeometry_17()
            {
                var result = _c.CreatePathGeometry(_path_4);
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_0_to_1_1(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: line 2 Outlines
            CompositionPathGeometry PathGeometry_18()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_21()));
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_0_to_1_2(), _rootProgress);
                return result;
            }

            // - Layer aggregator
            // Layer: line 1 Outlines
            CompositionPathGeometry PathGeometry_19()
            {
                var result = _c.CreatePathGeometry(new CompositionPath(Geometry_22()));
                StartProgressBoundAnimation(result, "TrimEnd", TrimEndScalarAnimation_0_to_1_3(), _rootProgress);
                return result;
            }

            // - - - Layer aggregator
            // - - Layer: LUPA rotacion 3D
            // Transforms: LUPA rotacion 3D Scale:0.5,0.5, Offset:<-22.366, -20.280998>
            CompositionPathGeometry PathGeometry_20()
            {
                var result = _c.CreatePathGeometry();
                StartProgressBoundAnimation(result, "Path", PathKeyFrameAnimation_4(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<318.455, 325.042>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_00(), new Matrix3x2(2F, 0F, 0F, 2F, 318.454987F, 325.041992F), AnimatedColorBrush_TransparentAlmostLavender_00F2D9FF_to_AlmostLavender_FFF2D9FF());
                return result;
            }

            // - - Layer aggregator
            // - Layer: x 2 Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<6.515, 6.515>
                var result = CreateSpriteShape(PathGeometry_01(), new Matrix3x2(1F, 0F, 0F, 1F, 6.51499987F, 6.51499987F), ColorBrush_AlmostGainsboro_FFE6E6E6());
                return result;
            }

            // - - Layer aggregator
            // - Layer: circulito Outlines
            // ShapeGroup: Group 1 Offset:<7.194, 7.198>
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<7.194, 7.198>
                var result = CreateSpriteShape(PathGeometry_02(), new Matrix3x2(1F, 0F, 0F, 1F, 7.19399977F, 7.19799995F), _colorBrush_AlmostGainsboro_FFE6E6E6);
                return result;
            }

            // Shape tree root for layer: Papel top Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<349.36, 195.307>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_03(), new Matrix3x2(2F, 0F, 0F, 2F, 349.359985F, 195.307007F), _colorBrush_AlmostGainsboro_FFE6E6E6);
                return result;
            }

            // Shape tree root for layer: Papel top Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<350.122, 192.591>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_04(), new Matrix3x2(2F, 0F, 0F, 2F, 350.122009F, 192.591003F), _colorBrush_AlmostGainsboro_FFE6E6E6);
                return result;
            }

            // Masks
            // Transforms for Papel top Outlines Scale:2,2, Offset:<19.869003, 67.348>
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<211.712, 141.587>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_05(), new Matrix3x2(2F, 0F, 0F, 2F, 211.712006F, 141.587006F), ColorBrush_Black());
                return result;
            }

            // Shape tree root for layer: Papel front Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<310.25, 325.766>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_06(), new Matrix3x2(2F, 0F, 0F, 2F, 310.25F, 325.765991F), ColorBrush_White());
                return result;
            }

            // Shape tree root for layer: Papel front Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<246.312, 266.098>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_07(), new Matrix3x2(2F, 0F, 0F, 2F, 246.311996F, 266.097992F), ColorBrush_AlmostWhiteSmoke_FFF0F0F0());
                return result;
            }

            // Shape tree root for layer: Papel front Outlines
            // ShapeGroup: Group 2 Offset:<74.219, 91.151>
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<303.09, 323.74>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_08(), new Matrix3x2(2F, 0F, 0F, 2F, 303.089996F, 323.73999F));
                result.StrokeBrush = _colorBrush_AlmostGainsboro_FFE6E6E6;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3.5999999F;
                return result;
            }

            // Shape tree root for layer: Papel front Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<296.8, 325.71997>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_09(), new Matrix3x2(2F, 0F, 0F, 2F, 296.799988F, 325.719971F), _colorBrush_AlmostGainsboro_FFE6E6E6);
                return result;
            }

            // Masks
            // Transforms for Papel front Outlines Scale:2,2, Offset:<-32.129, 129.543>
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<154.652, 141.43799>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_10(), new Matrix3x2(2F, 0F, 0F, 2F, 154.651993F, 141.437988F), _colorBrush_Black);
                return result;
            }

            // Shape tree root for layer: papel bot Outlines
            // Path 2
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<254.841, 453.782>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_11(), new Matrix3x2(2F, 0F, 0F, 2F, 254.841003F, 453.782013F), _colorBrush_AlmostGainsboro_FFE6E6E6);
                return result;
            }

            // Masks
            // Transforms for papel bot Outlines Scale:2,2, Offset:<-66.25, 334.573>
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<137.361, 417.544>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_12(), new Matrix3x2(2F, 0F, 0F, 2F, 137.360992F, 417.544006F), _colorBrush_Black);
                return result;
            }

            // Transforms: LUPA sombra
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<79.622, 81.906>
                var result = CreateSpriteShape(PathGeometry_13(), new Matrix3x2(1F, 0F, 0F, 1F, 79.6220016F, 81.9059982F), ColorBrush_AlmostGainsboro_FFCAD8E8());
                return result;
            }

            // Transforms: LUPA sombra
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<45.074, 45>, Rotation:-42.49999693815242 degrees,
                // Scale:<0.99999994, 0.99999994>
                var result = CreateSpriteShape(PathGeometry_14(), new Matrix3x2(0.737277329F, -0.675590158F, 0.675590158F, 0.737277329F, 45.0740013F, 45F), _colorBrush_AlmostGainsboro_FFCAD8E8);
                result.StrokeBrush = _colorBrush_AlmostGainsboro_FFCAD8E8;
                result.StrokeMiterLimit = 5F;
                StartProgressBoundAnimation(result, "StrokeThickness", StrokeThicknessScalarAnimation_5p6_to_3p6(), _rootProgress);
                return result;
            }

            // - - - - - PreComp layer: Sombra lupa
            // Masks
            CompositionSpriteShape SpriteShape_15()
            {
                var result = _c.CreateSpriteShape(PathGeometry_15());
                result.FillBrush = _colorBrush_Black;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_16()
            {
                // Offset:<227.81, 376.01804>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_16(), new Matrix3x2(2F, 0F, 0F, 2F, 227.809998F, 376.018036F));
                result.Scale = new Vector2(0F, 0F);
                result.StrokeBrush = ColorBrush_AlmostDarkViolet_FF9817D5();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3.5999999F;
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_2(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_17()
            {
                // Offset:<227.81, 325.618>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_17(), new Matrix3x2(2F, 0F, 0F, 2F, 227.809998F, 325.618011F));
                result.Scale = new Vector2(0F, 0F);
                result.StrokeBrush = _colorBrush_AlmostDarkViolet_FF9817D5;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3.5999999F;
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_3(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_18()
            {
                // Offset:<227.808, 275.217>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_18(), new Matrix3x2(2F, 0F, 0F, 2F, 227.807999F, 275.21701F));
                result.Scale = new Vector2(0F, 0F);
                result.StrokeBrush = _colorBrush_AlmostDarkViolet_FF9817D5;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3.5999999F;
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_4(), _rootProgress);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_19()
            {
                // Offset:<227.808, 221.217>, Scale:<2, 2>
                var result = CreateSpriteShape(PathGeometry_19(), new Matrix3x2(2F, 0F, 0F, 2F, 227.807999F, 221.216995F));
                result.Scale = new Vector2(0F, 0F);
                result.StrokeBrush = _colorBrush_AlmostDarkViolet_FF9817D5;
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeMiterLimit = 5F;
                result.StrokeThickness = 3.5999999F;
                StartProgressBoundAnimation(result, "Scale", ShapeVisibilityAnimation_5(), _rootProgress);
                return result;
            }

            // - - Layer aggregator
            // - Layer: LUPA rotacion 3D
            // Path 1
            CompositionSpriteShape SpriteShape_20()
            {
                // Offset:<41.709, 45.5>, Scale:<0.5, 0.5>
                var result = CreateSpriteShape(_pathGeometry_13, new Matrix3x2(0.5F, 0F, 0F, 0.5F, 41.7089996F, 45.5F), _colorBrush_AlmostDarkViolet_FF9817D5);
                return result;
            }

            // - - Layer aggregator
            // - Layer: LUPA rotacion 3D
            // Path 1
            CompositionSpriteShape SpriteShape_21()
            {
                // Offset:<24.435001, 27.047>, Rotation:-42.49999693815242 degrees,
                // Scale:<0.49999997, 0.49999997>
                var result = CreateSpriteShape(_pathGeometry_14, new Matrix3x2(0.368638664F, -0.337795079F, 0.337795079F, 0.368638664F, 24.4350014F, 27.0470009F), _colorBrush_White);
                result.StrokeBrush = ColorBrush_AlmostDarkMagenta_FF7813AA();
                result.StrokeMiterLimit = 5F;
                StartProgressBoundAnimation(result, "StrokeThickness", _strokeThicknessScalarAnimation_5p6_to_3p6, _rootProgress);
                return result;
            }

            // - - Layer aggregator
            // - Layer: LUPA rotacion 3D
            // Path 1
            CompositionSpriteShape SpriteShape_22()
            {
                // Offset:<24.985, 26.695501>, Scale:<0.5, 0.5>
                var result = CreateSpriteShape(PathGeometry_20(), new Matrix3x2(0.5F, 0F, 0F, 0.5F, 24.9850006F, 26.6955013F), AnimatedColorBrush_TransparentAlmostDarkViolet_009817D5_to_AlmostDarkViolet_FF9817D5());
                return result;
            }

            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            CompositionSurfaceBrush SurfaceBrush_2()
            {
                return _c.CreateSurfaceBrush(VisualSurface_2());
            }

            CompositionSurfaceBrush SurfaceBrush_3()
            {
                return _c.CreateSurfaceBrush(VisualSurface_3());
            }

            CompositionSurfaceBrush SurfaceBrush_4()
            {
                return _c.CreateSurfaceBrush(VisualSurface_4());
            }

            CompositionSurfaceBrush SurfaceBrush_5()
            {
                return _c.CreateSurfaceBrush(VisualSurface_5());
            }

            // - PreComp layer: Sombra lupa
            CompositionSurfaceBrush SurfaceBrush_6()
            {
                return _c.CreateSurfaceBrush(VisualSurface_6());
            }

            // - PreComp layer: Sombra lupa
            CompositionSurfaceBrush SurfaceBrush_7()
            {
                return _c.CreateSurfaceBrush(VisualSurface_7());
            }

            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_0();
                result.SourceSize = new Vector2(642F, 642F);
                return result;
            }

            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_1();
                result.SourceSize = new Vector2(642F, 642F);
                return result;
            }

            CompositionVisualSurface VisualSurface_2()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_2();
                result.SourceSize = new Vector2(642F, 642F);
                return result;
            }

            CompositionVisualSurface VisualSurface_3()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_3();
                result.SourceSize = new Vector2(642F, 642F);
                return result;
            }

            CompositionVisualSurface VisualSurface_4()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_4();
                result.SourceSize = new Vector2(642F, 642F);
                return result;
            }

            CompositionVisualSurface VisualSurface_5()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_5();
                result.SourceSize = new Vector2(642F, 642F);
                return result;
            }

            // - - PreComp layer: Sombra lupa
            CompositionVisualSurface VisualSurface_6()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_6();
                result.SourceSize = new Vector2(642F, 642F);
                return result;
            }

            // - - PreComp layer: Sombra lupa
            CompositionVisualSurface VisualSurface_7()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_8();
                result.SourceSize = new Vector2(642F, 642F);
                return result;
            }

            ContainerVisual ContainerVisual_0()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Papel top Outlines
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            ContainerVisual ContainerVisual_2()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Papel front Outlines
                result.Children.InsertAtTop(ShapeVisual_3());
                return result;
            }

            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_4());
                return result;
            }

            ContainerVisual ContainerVisual_4()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: papel bot Outlines
                result.Children.InsertAtTop(ShapeVisual_5());
                return result;
            }

            ContainerVisual ContainerVisual_5()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_6());
                return result;
            }

            // - - - PreComp layer: Sombra lupa
            ContainerVisual ContainerVisual_6()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Transforms for Sombra lupa Scale(1,1,0)
                result.Children.InsertAtTop(ContainerVisual_7());
                return result;
            }

            // - - - - PreComp layer: Sombra lupa
            // Transforms for Sombra lupa Scale(1,1,0)
            ContainerVisual ContainerVisual_7()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.IsVisible = false;
                result.Size = new Vector2(642F, 642F);
                // Scale:<1, 1>
                result.TransformMatrix = new Matrix4x4(1F, 0F, 0F, 0F, 0F, 1F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 0F, 1F);
                // Shape tree root for layer: LUPA sombra
                result.Children.InsertAtTop(ShapeVisual_7());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation_2(), _rootProgress);
                return result;
            }

            // - - - PreComp layer: Sombra lupa
            ContainerVisual ContainerVisual_8()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Masks
                result.Children.InsertAtTop(ShapeVisual_8());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_0());
                children.InsertAtTop(SpriteVisual_0());
                children.InsertAtTop(SpriteVisual_1());
                children.InsertAtTop(SpriteVisual_2());
                // PreComp layer: Sombra lupa
                children.InsertAtTop(SpriteVisual_3());
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_9());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0.232999995F, 0F), new Vector2(0.433999985F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.172000006F, 0F), new Vector2(0.195999995F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.200000003F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.209999993F, 0.549000025F), new Vector2(0.200000003F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_4()
            {
                return _cubicBezierEasingFunction_4 = _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.200000003F, 1F));
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_5()
            {
                return _cubicBezierEasingFunction_5 = _c.CreateCubicBezierEasingFunction(new Vector2(0.150000006F, 0F), new Vector2(0.200000003F, 1F));
            }

            ExpressionAnimation RootProgress()
            {
                var result = _rootProgress = _c.CreateExpressionAnimation("_.Progress");
                result.SetReferenceParameter("_", _root);
                return result;
            }

            // - - - - - PreComp layer: Sombra lupa
            // Transforms for Sombra lupa Scale(1,1,0)
            InsetClip InsetClip_0()
            {
                var result = _c.CreateInsetClip();
                return result;
            }

            // - - Masks
            // -  Offset:<261, 101.5>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_0()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, new CompositionPath(Geometry_05()), _holdThenStepEasingFunction);
                // Frame 10.
                result.InsertKeyFrame(0.03164557F, new CompositionPath(Geometry_06()), _c.CreateCubicBezierEasingFunction(new Vector2(0.400000006F, 0F), new Vector2(0.833000004F, 0.833000004F)));
                return result;
            }

            // - - Masks
            // - Layer: Papel front Outlines
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_1()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_0(), _stepThenHoldEasingFunction);
                // Frame 10.
                result.InsertKeyFrame(0.03164557F, _path_0, _holdThenStepEasingFunction);
                // Frame 25.
                result.InsertKeyFrame(0.079113923F, new CompositionPath(Geometry_12()), _c.CreateCubicBezierEasingFunction(new Vector2(0.280000001F, 0F), new Vector2(0.99000001F, 1F)));
                return result;
            }

            // - - Masks
            // - Layer: papel bot Outlines
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_2()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_1(), _stepThenHoldEasingFunction);
                // Frame 25.
                result.InsertKeyFrame(0.079113923F, _path_1, _holdThenStepEasingFunction);
                // Frame 45.
                result.InsertKeyFrame(0.142405063F, new CompositionPath(Geometry_15()), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.349999994F, 1F)));
                return result;
            }

            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_3()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_2(), _stepThenHoldEasingFunction);
                // Frame 35.
                result.InsertKeyFrame(0.110759497F, _path_2, _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.189873412F, Path_3(), CubicBezierEasingFunction_2());
                // Frame 84.
                result.InsertKeyFrame(0.265822798F, _path_2, _c.CreateCubicBezierEasingFunction(new Vector2(0.800000012F, 0F), new Vector2(0.764999986F, 0.384000003F)));
                // Frame 110.
                result.InsertKeyFrame(0.348101258F, _path_3, CubicBezierEasingFunction_3());
                // Frame 126.
                result.InsertKeyFrame(0.398734182F, _path_3, CubicBezierEasingFunction_4());
                // Frame 147.
                result.InsertKeyFrame(0.465189874F, _path_2, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.764999986F, 0.384000003F)));
                // Frame 173.
                result.InsertKeyFrame(0.547468364F, _path_3, _cubicBezierEasingFunction_3);
                return result;
            }

            // - - - - Layer aggregator
            // - - - Layer: LUPA rotacion 3D
            // - Transforms: LUPA rotacion 3D Scale:0.5,0.5, Offset:<-22.366, -20.280998>
            // Path
            PathKeyFrameAnimation PathKeyFrameAnimation_4()
            {
                // Frame 0.
                var result = CreatePathKeyFrameAnimation(0F, Path_5(), _stepThenHoldEasingFunction);
                // Frame 202.
                result.InsertKeyFrame(0.639240503F, _path_5, _holdThenStepEasingFunction);
                // Frame 232.
                result.InsertKeyFrame(0.734177232F, new CompositionPath(Geometry_24()), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0.166999996F), new Vector2(0.25F, 1F)));
                return result;
            }

            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_64_to_0()
            {
                // Frame 0.
                var result = _rotationAngleInDegreesScalarAnimation_64_to_0 = CreateScalarKeyFrameAnimation(0F, 64F, _stepThenHoldEasingFunction);
                // Frame 34.
                result.InsertKeyFrame(0.107594937F, 64F, _holdThenStepEasingFunction);
                // Frame 92.
                result.InsertKeyFrame(0.291139245F, 23F, _c.CreateCubicBezierEasingFunction(new Vector2(0.300000012F, 0F), new Vector2(0.300000012F, 1F)));
                // Frame 133.
                result.InsertKeyFrame(0.42088607F, -21F, _c.CreateCubicBezierEasingFunction(new Vector2(0.699999988F, 0F), new Vector2(0.437000006F, 0.995000005F)));
                // Frame 183.
                result.InsertKeyFrame(0.579113901F, 16F, _c.CreateCubicBezierEasingFunction(new Vector2(0.54400003F, 0F), new Vector2(0.35800001F, 1F)));
                // Frame 220.
                result.InsertKeyFrame(0.696202517F, 0F, _c.CreateCubicBezierEasingFunction(new Vector2(0.595000029F, 0F), new Vector2(0.326000005F, 0.985000014F)));
                return result;
            }

            // StrokeThickness
            ScalarKeyFrameAnimation StrokeThicknessScalarAnimation_5p6_to_3p6()
            {
                // Frame 0.
                var result = _strokeThicknessScalarAnimation_5p6_to_3p6 = CreateScalarKeyFrameAnimation(0F, 5.5999999F, _stepThenHoldEasingFunction);
                // Frame 35.
                result.InsertKeyFrame(0.110759497F, 5.5999999F, _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.189873412F, 3.5999999F, _cubicBezierEasingFunction_2);
                // Frame 84.
                result.InsertKeyFrame(0.265822798F, 5.5999999F, _c.CreateCubicBezierEasingFunction(new Vector2(0.800000012F, 0F), new Vector2(0.833000004F, 0.833000004F)));
                // Frame 110.
                result.InsertKeyFrame(0.348101258F, 3.5999999F, _cubicBezierEasingFunction_2);
                // Frame 126.
                result.InsertKeyFrame(0.398734182F, 3.5999999F, _cubicBezierEasingFunction_4);
                // Frame 147.
                result.InsertKeyFrame(0.465189874F, 5.5999999F, _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.833000004F, 0.833000004F)));
                // Frame 173.
                result.InsertKeyFrame(0.547468364F, 3.5999999F, _cubicBezierEasingFunction_2);
                return result;
            }

            // - - Layer aggregator
            // - Layer: line 4 Outlines
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 38.
                result.InsertKeyFrame(0.120253168F, 0F, _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.189873412F, 1F, _cubicBezierEasingFunction_5);
                return result;
            }

            // - - Layer aggregator
            // - Layer: line 3 Outlines
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1_1()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 31.
                result.InsertKeyFrame(0.0981012657F, 0F, _holdThenStepEasingFunction);
                // Frame 53.
                result.InsertKeyFrame(0.167721525F, 1F, _cubicBezierEasingFunction_5);
                return result;
            }

            // - - Layer aggregator
            // - Layer: line 2 Outlines
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1_2()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 24.
                result.InsertKeyFrame(0.0759493634F, 0F, _holdThenStepEasingFunction);
                // Frame 46.
                result.InsertKeyFrame(0.145569623F, 1F, _cubicBezierEasingFunction_5);
                return result;
            }

            // - - Layer aggregator
            // - Layer: line 1 Outlines
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_1_3()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, _stepThenHoldEasingFunction);
                // Frame 17.
                result.InsertKeyFrame(0.0537974685F, 0F, _holdThenStepEasingFunction);
                // Frame 39.
                result.InsertKeyFrame(0.12341772F, 1F, _cubicBezierEasingFunction_5);
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(642F, 642F);
                var shapes = result.Shapes;
                // Scale:2,2, Offset:<198.94199, 222.44>
                shapes.Add(SpriteShape_00());
                // Layer: x 2 Outlines
                shapes.Add(ContainerShape_0());
                // Layer: circulito Outlines
                shapes.Add(ContainerShape_2());
                return result;
            }

            // Shape tree root for layer: Papel top Outlines
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(642F, 642F);
                var shapes = result.Shapes;
                // Offset:<261, 101.5>
                shapes.Add(SpriteShape_03());
                // Offset:<261, 101.5>
                shapes.Add(SpriteShape_04());
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(642F, 642F);
                // Offset:<261, 101.5>
                result.Shapes.Add(SpriteShape_05());
                return result;
            }

            // Shape tree root for layer: Papel front Outlines
            ShapeVisual ShapeVisual_3()
            {
                var result = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(642F, 642F);
                var shapes = result.Shapes;
                // Offset:<261, 101.5>
                shapes.Add(SpriteShape_06());
                // Offset:<261, 101.5>
                shapes.Add(SpriteShape_07());
                // Offset:<261, 101.5>
                shapes.Add(SpriteShape_08());
                // Offset:<261, 101.5>
                shapes.Add(SpriteShape_09());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation_0(), _rootProgress);
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_4()
            {
                var result = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(642F, 642F);
                // Layer: Papel front Outlines
                result.Shapes.Add(SpriteShape_10());
                StartProgressBoundAnimation(result, "IsVisible", _isVisibleBooleanAnimation_0, _rootProgress);
                return result;
            }

            // Shape tree root for layer: papel bot Outlines
            ShapeVisual ShapeVisual_5()
            {
                var result = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(642F, 642F);
                // Offset:<261, 101.5>
                result.Shapes.Add(SpriteShape_11());
                StartProgressBoundAnimation(result, "IsVisible", IsVisibleBooleanAnimation_1(), _rootProgress);
                return result;
            }

            // Masks
            ShapeVisual ShapeVisual_6()
            {
                var result = _c.CreateShapeVisual();
                result.IsVisible = false;
                result.Size = new Vector2(642F, 642F);
                // Layer: papel bot Outlines
                result.Shapes.Add(SpriteShape_12());
                StartProgressBoundAnimation(result, "IsVisible", _isVisibleBooleanAnimation_1, _rootProgress);
                return result;
            }

            // - - - - - PreComp layer: Sombra lupa
            // Transforms for Sombra lupa Scale(1,1,0)
            // Shape tree root for layer: LUPA sombra
            ShapeVisual ShapeVisual_7()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(642F, 642F);
                result.Shapes.Add(ContainerShape_4());
                return result;
            }

            // - - - - PreComp layer: Sombra lupa
            // Masks
            ShapeVisual ShapeVisual_8()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(642F, 642F);
                result.Shapes.Add(SpriteShape_15());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_9()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(642F, 642F);
                var shapes = result.Shapes;
                // Layer: line 4 Outlines
                shapes.Add(SpriteShape_16());
                // Layer: line 3 Outlines
                shapes.Add(SpriteShape_17());
                // Layer: line 2 Outlines
                shapes.Add(SpriteShape_18());
                // Layer: line 1 Outlines
                shapes.Add(SpriteShape_19());
                // Layer: LUPA rotacion 3D
                shapes.Add(ContainerShape_6());
                return result;
            }

            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(642F, 642F);
                result.Brush = EffectBrush_0();
                return result;
            }

            SpriteVisual SpriteVisual_1()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(642F, 642F);
                result.Brush = EffectBrush_1();
                return result;
            }

            SpriteVisual SpriteVisual_2()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(642F, 642F);
                result.Brush = EffectBrush_2();
                return result;
            }

            // PreComp layer: Sombra lupa
            SpriteVisual SpriteVisual_3()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(642F, 642F);
                result.Brush = EffectBrush_3();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - Transforms: LUPA sombra
            // Anchor
            Vector2KeyFrameAnimation AnchorVector2Animation()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(59.5279999F, 35.6559982F), _stepThenHoldEasingFunction);
                // Frame 133.
                result.InsertKeyFrame(0.42088607F, new Vector2(59.5279999F, 35.6559982F), _holdThenStepEasingFunction);
                // Frame 183.
                result.InsertKeyFrame(0.579113901F, new Vector2(55.4280014F, 43.5559998F), _c.CreateCubicBezierEasingFunction(new Vector2(0.330000013F, 0F), new Vector2(0.670000017F, 1F)));
                return result;
            }

            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation()
            {
                // Frame 0.
                var result = _offsetVector2Animation = CreateVector2KeyFrameAnimation(0F, new Vector2(193.046005F, 328.990997F), _stepThenHoldEasingFunction);
                // Frame 34.
                result.InsertKeyFrame(0.107594937F, new Vector2(193.046005F, 328.990997F), _holdThenStepEasingFunction);
                // Frame 88.
                result.InsertKeyFrame(0.278481007F, new Vector2(276.54599F, 216.990997F), _c.CreateCubicBezierEasingFunction(new Vector2(0F, 0F), new Vector2(0.222000003F, 1F)));
                // Frame 133.
                result.InsertKeyFrame(0.42088607F, new Vector2(287.04599F, 354.990997F), _c.CreateCubicBezierEasingFunction(new Vector2(0.785000026F, 0F), new Vector2(0.453000009F, 0.527999997F)));
                // Frame 183.04.
                result.InsertKeyFrame(0.579225183F, new Vector2(452.04599F, 366.990997F), _c.CreateCubicBezierEasingFunction(new Vector2(0.423000008F, 0.344999999F), new Vector2(0.156000003F, 1F)));
                return result;
            }

            // - - Layer aggregator
            // - Layer: x 2 Outlines
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _stepThenHoldEasingFunction);
                // Frame 252.
                result.InsertKeyFrame(0.797468364F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                // Frame 272.
                result.InsertKeyFrame(0.860759497F, new Vector2(2.4000001F, 2.4000001F), CubicBezierEasingFunction_0());
                // Frame 304.
                result.InsertKeyFrame(0.962025344F, new Vector2(2F, 2F), CubicBezierEasingFunction_1());
                return result;
            }

            // - - Layer aggregator
            // - Layer: circulito Outlines
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _stepThenHoldEasingFunction);
                // Frame 232.
                result.InsertKeyFrame(0.734177232F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                // Frame 252.
                result.InsertKeyFrame(0.797468364F, new Vector2(2.4000001F, 2.4000001F), _cubicBezierEasingFunction_0);
                // Frame 284.
                result.InsertKeyFrame(0.898734152F, new Vector2(2F, 2F), _cubicBezierEasingFunction_1);
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_2()
            {
                // Frame 0.
                var result = _scaleVector2Animation_2 = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), _stepThenHoldEasingFunction);
                // Frame 34.
                result.InsertKeyFrame(0.107594937F, new Vector2(0F, 0F), _holdThenStepEasingFunction);
                // Frame 60.
                result.InsertKeyFrame(0.189873412F, new Vector2(2.4000001F, 2.4000001F), CubicBezierEasingFunction_5());
                // Frame 133.
                result.InsertKeyFrame(0.42088607F, new Vector2(2.4000001F, 2.4000001F), _c.CreateCubicBezierEasingFunction(new Vector2(0.166999996F, 0F), new Vector2(0.529999971F, 1F)));
                // Frame 183.
                result.InsertKeyFrame(0.579113901F, new Vector2(4F, 4F), _c.CreateCubicBezierEasingFunction(new Vector2(0.419999987F, 0F), new Vector2(0.159999996F, 1F)));
                return result;
            }

            // - Layer aggregator
            // Layer: x 2 Outlines
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
            {
                // Frame 252.
                var result = CreateVector2KeyFrameAnimation(0.797468364F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: circulito Outlines
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
            {
                // Frame 232.
                var result = CreateVector2KeyFrameAnimation(0.734177232F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: line 4 Outlines
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_2()
            {
                // Frame 38.
                var result = CreateVector2KeyFrameAnimation(0.120253168F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: line 3 Outlines
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_3()
            {
                // Frame 31.
                var result = CreateVector2KeyFrameAnimation(0.0981012657F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: line 2 Outlines
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_4()
            {
                // Frame 24.
                var result = CreateVector2KeyFrameAnimation(0.0759493634F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: line 1 Outlines
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_5()
            {
                // Frame 17.
                var result = CreateVector2KeyFrameAnimation(0.0537974685F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            // - Layer aggregator
            // Layer: LUPA rotacion 3D
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_6()
            {
                // Frame 34.
                var result = CreateVector2KeyFrameAnimation(0.107594937F, new Vector2(1F, 1F), _holdThenStepEasingFunction);
                return result;
            }

            internal EmptyList_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(642F, 642F);
            void IDisposable.Dispose() => _root?.Dispose();

        }
    }
}
